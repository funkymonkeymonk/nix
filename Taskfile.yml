version: "3"

tasks:
  default:
    aliases:
      - list
      - l
    desc: List all tasks if none is specified
    cmd: task --list-all

  build-osx:
    desc: Perform osx build
    aliases:
      - osx
    platforms: [darwin]
    cmd: sudo darwin-rebuild switch --flake ./
  build-linux:
    desc: Perform linux based build
    aliases:
      - linux
    platforms: [linux]
    cmd: sudo nixos-rebuild switch --flake ./
  switch:
    desc: Runs the appropriate switch command for the platform
    aliases:
      - s
    cmds:
      - cmd: task build-osx
        platforms: [darwin]
      - cmd: task build-linux
        platforms: [linux]
  test:
    desc: Run flake check
    aliases:
      - t
    cmds:
      - echo "üîç building flake configurations..."
      - nix flake check
      - echo "‚úÖ All configurations (NixOS and Darwin) validated successfully"

  build:
    desc: build all configurations
    aliases:
      - b
    cmds:
      - echo "üîç building flake configurations..."
      - task: build:darwin
      - task: build:nixos
      - echo "‚úÖ All configurations (NixOS and Darwin) validated successfully"

  build:darwin:
    desc: build all Darwin (macOS) configurations
    cmds:
      - echo "üçé building Darwin configurations..."
      - task: build:darwin:will-stride-mbp
      - task: build:darwin:megamanx
      - echo "‚úÖ All Darwin configurations validated successfully"

  build:nixos:
    desc: build all NixOS configurations
    cmds:
      - echo "üêß building NixOS configurations..."
      - task: build:nixos:drlight
      - task: build:nixos:zero
      - echo "‚úÖ All NixOS configurations validated successfully"

  build:darwin:will-stride-mbp:
    desc: Build Will-Stride-MBP Darwin configuration
    cmd: nix build .#darwinConfigurations."Will-Stride-MBP".config.system.build.toplevel

  build:darwin:megamanx:
    desc: build MegamanX Darwin configuration
    cmd: nix build .#darwinConfigurations."MegamanX".config.system.build.toplevel

  build:nixos:drlight:
    desc: build drlight NixOS configuration
    cmd: nix build .#nixosConfigurations."drlight".config.system.build.toplevel

  build:nixos:zero:
    desc: build zero NixOS configuration
    cmd: nix build .#nixosConfigurations."zero".config.system.build.toplevel

  fmt:
    desc: Run formatter on all nix files.
    aliases:
      - f
    cmds:
      - alejandra *.nix

  lint:
    desc: Run linters on all nix files.
    aliases:
      - l
    cmds:
      - echo "üîç Running deadnix (dead code finder)..."
      - devenv shell -- deadnix .

  quality:
    desc: Run all code quality checks (format + lint).
    aliases:
      - q
    cmds:
      - task: fmt
      - task: lint

  dev:
    desc: Enter development shell with all tools available.
    aliases:
      - d
    cmd: devenv shell

  devenv:update:
    desc: Update devenv lock file.
    cmd: devenv update

  secrets-get:
    desc: "Get secrets file using 1Password cli"
    cmd: echo "Not Yet Implemented"

  secrets-set:
    desc: "Set secrets file using 1Password cli"
    cmds:
      - op --version
      - echo "Not Yet Implemented"

  init:
    desc: Initial setup commands
    cmds:
      - sudo nix run nix-darwin/master#darwin-rebuild -- switch --flake ./

  git:set-remote-ssh:
    desc: Switch
    cmds:
      - git remote -v
      - git remote set-url origin git@github.com:funkymonkeymonk/nix.git
      - git remote -v

  git:set-remote-https:
    desc: Switch
    cmds:
      - git remote -v
      - git remote set-url origin https://github.com/funkymonkeymonk/nix.git
      - git remote -v
# TODO: Add gh auth workflow
# TODO: Add a 1Password setup flow
# TODO: Add a git setup flow
