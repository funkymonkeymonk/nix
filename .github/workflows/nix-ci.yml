---
name: Nix CI/CD Pipeline

# yamllint disable-line rule:truthy
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Matrix build for different architectures
  test-matrix:
    name: Test (${{ matrix.system }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - system: x86_64-linux
            runner: ubuntu-latest
          - system: aarch64-darwin
            runner: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v10
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            sandbox = false

      - name: Install Task
        run: nix profile install nixpkgs#go-task nixpkgs#alejandra

      - name: Free up disk space
        run: |
          echo "ðŸ§¹ Cleaning up disk space..."
          # Remove unnecessary packages and clear caches
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          # Clean up Docker if it exists
          docker system prune -af || true
          # Clean up Nix garbage
          nix-collect-garbage -d || true
          # Show disk usage
          df -h

      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: ${{ runner.os }}-nix-store-${{ hashFiles('**/flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-nix-store-

      - name: Run formatter
        run: task fmt

      - name: Run configuration tests
        run: task test

      - name: Post-build cleanup
        if: always()
        run: |
          echo "ðŸ§¹ Post-build cleanup..."
          # Clean up build artifacts
          rm -rf result* || true
          # Run Nix garbage collection
          nix-collect-garbage -d || true
          # Show final disk usage
          df -h
